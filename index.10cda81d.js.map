{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar offices = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nvar tableHeaders = document.querySelectorAll(\"thead tr th\");\nvar sortOrders = {};\nvar tableBody = document.querySelector(\"tbody\");\nvar tableRows = Array.from(tableBody.querySelectorAll(\"tr\"));\nvar sortField = function(header, sortIndex) {\n    var sortOrder = sortOrders[sortIndex] || \"desc\";\n    if (header !== sortOrders.lastHeaderClicked) sortOrder = \"asc\";\n    else sortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\n    sortOrders[sortIndex] = sortOrder;\n    sortOrders.lastHeaderClicked = header;\n    header.setAttribute(\"data-sort\", sortOrder);\n    var isNumeric = tableRows.every(function(row) {\n        var cellText = row.children[sortIndex].innerText;\n        return !isNaN(parseFloat(cellText.replace(/[^0-9.-]+/g, \"\"))) && isFinite(parseFloat(cellText.replace(/[^0-9.-]+/g, \"\")));\n    });\n    tableRows.sort(function(a, b) {\n        var cellA = a.children[sortIndex].innerText;\n        var cellB = b.children[sortIndex].innerText;\n        if (isNumeric) {\n            cellA = parseNumber(cellA);\n            cellB = parseNumber(cellB);\n        } else {\n            cellA = cellA.toLowerCase();\n            cellB = cellB.toLowerCase();\n        }\n        switch(sortOrder){\n            case \"asc\":\n                return isNumeric ? cellA - cellB : cellA.localeCompare(cellB);\n            case \"desc\":\n                return isNumeric ? cellB - cellA : cellB.localeCompare(cellA);\n            default:\n                return 0;\n        }\n    });\n    tableRows.forEach(function(row) {\n        return tableBody.appendChild(row);\n    });\n};\nvar parseNumber = function(number) {\n    return parseFloat(number.replace(/[$,]+/g, \"\"));\n};\ntableHeaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sortField(header, index);\n    });\n});\ntableRows.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        tableRows.forEach(function(r) {\n            r.classList.remove(\"active\");\n        });\n        row.classList.add(\"active\");\n    });\n});\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nvar createInput = function(type, data, labelText) {\n    var label = document.createElement(\"label\");\n    var input = document.createElement(\"input\");\n    input.required = true;\n    input.type = type;\n    input.name = data;\n    input.setAttribute(\"data-qa\", data);\n    label.textContent = labelText + \": \";\n    label.appendChild(input);\n    form.appendChild(label);\n};\ncreateInput(\"text\", \"name\", \"Name\");\ncreateInput(\"text\", \"position\", \"Position\");\nvar selectElement = document.createElement(\"select\");\nselectElement.name = \"office\";\nselectElement.setAttribute(\"data-qa\", \"office\");\noffices.forEach(function(office) {\n    var option = document.createElement(\"option\");\n    option.value = office.toLowerCase();\n    option.textContent = office;\n    selectElement.appendChild(option);\n});\nvar selectLabel = document.createElement(\"label\");\nselectLabel.textContent = \"Office: \";\nselectLabel.appendChild(selectElement);\nform.appendChild(selectLabel);\ncreateInput(\"number\", \"age\", \"Age\");\ncreateInput(\"number\", \"salary\", \"Salary\");\nvar submitButton = document.createElement(\"button\");\nsubmitButton.type = \"submit\";\nsubmitButton.textContent = \"Save to table\";\nform.appendChild(submitButton);\ndocument.querySelector(\"body\").appendChild(form);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var nameInput = document.querySelector('input[name=\"name\"]');\n    var ageInput = document.querySelector('input[name=\"age\"]');\n    var newRow = document.createElement(\"tr\");\n    var displayNotification = function(text, type) {\n        var notification = document.createElement(\"div\");\n        notification.classList.add(\"notification\", type);\n        notification.setAttribute(\"data-qa\", \"notification\");\n        notification.textContent = text;\n        document.body.appendChild(notification);\n        setTimeout(function() {\n            if (notification.parentNode) document.body.removeChild(notification);\n        }, 3000);\n    };\n    if (nameInput.value.length < 4) {\n        displayNotification(\"Name must be at least 4 letters long!\", \"error\");\n        return;\n    }\n    if (ageInput.value < 18 || ageInput.value > 90) {\n        displayNotification(\"Your age doesn't suit our requirements\", \"error\");\n        return;\n    }\n    var nameCell = document.createElement(\"td\");\n    nameCell.textContent = nameInput.value;\n    newRow.appendChild(nameCell);\n    var positionInput = document.querySelector('input[name=\"position\"]');\n    var positionCell = document.createElement(\"td\");\n    positionCell.textContent = positionInput.value;\n    newRow.appendChild(positionCell);\n    var officeInput = document.querySelector('select[name=\"office\"]');\n    var officeCell = document.createElement(\"td\");\n    officeCell.textContent = officeInput.value;\n    newRow.appendChild(officeCell);\n    var ageCell = document.createElement(\"td\");\n    ageCell.textContent = ageInput.value;\n    newRow.appendChild(ageCell);\n    var salaryInput = document.querySelector('input[name=\"salary\"]');\n    var salaryCell = document.createElement(\"td\");\n    salaryCell.textContent = salaryInput.value;\n    newRow.appendChild(salaryCell);\n    tableBody.appendChild(newRow);\n    displayNotification(\"New employee added successfully!\", \"success\");\n    form.reset();\n});\n\n//# sourceMappingURL=index.10cda81d.js.map\n","'use strict';\n\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nconst tableHeaders = document.querySelectorAll('thead tr th');\nconst sortOrders = {};\nconst tableBody = document.querySelector('tbody');\nconst tableRows = Array.from(tableBody.querySelectorAll('tr'));\n\nconst sortField = (header, sortIndex) => {\n  let sortOrder = sortOrders[sortIndex] || 'desc';\n\n  if (header !== sortOrders.lastHeaderClicked) {\n    sortOrder = 'asc';\n  } else {\n    sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n  }\n\n  sortOrders[sortIndex] = sortOrder;\n  sortOrders.lastHeaderClicked = header;\n\n  header.setAttribute('data-sort', sortOrder);\n\n  const isNumeric = tableRows.every((row) => {\n    const cellText = row.children[sortIndex].innerText;\n\n    return (\n      !isNaN(parseFloat(cellText.replace(/[^0-9.-]+/g, ''))) &&\n      isFinite(parseFloat(cellText.replace(/[^0-9.-]+/g, '')))\n    );\n  });\n\n  tableRows.sort((a, b) => {\n    let cellA = a.children[sortIndex].innerText;\n    let cellB = b.children[sortIndex].innerText;\n\n    if (isNumeric) {\n      cellA = parseNumber(cellA);\n      cellB = parseNumber(cellB);\n    } else {\n      cellA = cellA.toLowerCase();\n      cellB = cellB.toLowerCase();\n    }\n\n    switch (sortOrder) {\n      case 'asc':\n        return isNumeric ? cellA - cellB : cellA.localeCompare(cellB);\n      case 'desc':\n        return isNumeric ? cellB - cellA : cellB.localeCompare(cellA);\n      default:\n        return 0;\n    }\n  });\n\n  tableRows.forEach((row) => tableBody.appendChild(row));\n};\n\nconst parseNumber = (number) => {\n  return parseFloat(number.replace(/[$,]+/g, ''));\n};\n\ntableHeaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortField(header, index);\n  });\n});\n\ntableRows.forEach((row) => {\n  row.addEventListener('click', () => {\n    tableRows.forEach((r) => {\n      r.classList.remove('active');\n    });\n\n    row.classList.add('active');\n  });\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst createInput = (type, data, labelText) => {\n  const label = document.createElement('label');\n  const input = document.createElement('input');\n\n  input.required = true;\n  input.type = type;\n  input.name = data;\n  input.setAttribute('data-qa', data);\n  label.textContent = labelText + ': ';\n\n  label.appendChild(input);\n  form.appendChild(label);\n};\n\ncreateInput('text', 'name', 'Name');\ncreateInput('text', 'position', 'Position');\n\nconst selectElement = document.createElement('select');\n\nselectElement.name = 'office';\nselectElement.setAttribute('data-qa', 'office');\n\noffices.forEach((office) => {\n  const option = document.createElement('option');\n\n  option.value = office.toLowerCase();\n  option.textContent = office;\n\n  selectElement.appendChild(option);\n});\n\nconst selectLabel = document.createElement('label');\n\nselectLabel.textContent = 'Office: ';\nselectLabel.appendChild(selectElement);\n\nform.appendChild(selectLabel);\n\ncreateInput('number', 'age', 'Age');\ncreateInput('number', 'salary', 'Salary');\n\nconst submitButton = document.createElement('button');\n\nsubmitButton.type = 'submit';\nsubmitButton.textContent = 'Save to table';\n\nform.appendChild(submitButton);\ndocument.querySelector('body').appendChild(form);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameInput = document.querySelector('input[name=\"name\"]');\n  const ageInput = document.querySelector('input[name=\"age\"]');\n\n  const newRow = document.createElement('tr');\n\n  const displayNotification = (text, type) => {\n    const notification = document.createElement('div');\n\n    notification.classList.add('notification', type);\n    notification.setAttribute('data-qa', 'notification');\n    notification.textContent = text;\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      if (notification.parentNode) {\n        document.body.removeChild(notification);\n      }\n    }, 3000);\n  };\n\n  if (nameInput.value.length < 4) {\n    displayNotification('Name must be at least 4 letters long!', 'error');\n\n    return;\n  }\n\n  if (ageInput.value < 18 || ageInput.value > 90) {\n    displayNotification(\"Your age doesn't suit our requirements\", 'error');\n\n    return;\n  }\n\n  const nameCell = document.createElement('td');\n\n  nameCell.textContent = nameInput.value;\n  newRow.appendChild(nameCell);\n\n  const positionInput = document.querySelector('input[name=\"position\"]');\n  const positionCell = document.createElement('td');\n\n  positionCell.textContent = positionInput.value;\n  newRow.appendChild(positionCell);\n\n  const officeInput = document.querySelector('select[name=\"office\"]');\n  const officeCell = document.createElement('td');\n\n  officeCell.textContent = officeInput.value;\n  newRow.appendChild(officeCell);\n\n  const ageCell = document.createElement('td');\n\n  ageCell.textContent = ageInput.value;\n  newRow.appendChild(ageCell);\n\n  const salaryInput = document.querySelector('input[name=\"salary\"]');\n  const salaryCell = document.createElement('td');\n\n  salaryCell.textContent = salaryInput.value;\n  newRow.appendChild(salaryCell);\n\n  tableBody.appendChild(newRow);\n\n  displayNotification('New employee added successfully!', 'success');\n\n  form.reset();\n});\n"],"names":["tableHeaders","document","querySelectorAll","sortOrders","tableBody","querySelector","tableRows","Array","from","sortField","header","sortIndex","sortOrder","lastHeaderClicked","setAttribute","isNumeric","every","row","cellText","children","innerText","isNaN","parseFloat","replace","isFinite","sort","a","b","cellA","cellB","parseNumber","toLowerCase","localeCompare","forEach","appendChild","number","index","addEventListener","r","classList","remove","add","form","createElement","createInput","type","data","labelText","label","input","required","name","textContent","selectElement","offices","office","option","value","selectLabel","submitButton","e","preventDefault","nameInput","ageInput","newRow","displayNotification","text","notification","body","setTimeout","parentNode","removeChild","length","nameCell","positionInput","positionCell","officeInput","officeCell","ageCell","salaryInput","salaryCell","reset"],"version":3,"file":"index.10cda81d.js.map"}